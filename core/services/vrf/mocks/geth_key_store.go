// Code generated by mockery 2.7.4. DO NOT EDIT.

package mocks

import (
	common "github.com/ethereum/go-ethereum/common"
	gorm "gorm.io/gorm"

	mock "github.com/stretchr/testify/mock"
)

// GethKeyStore is an autogenerated mock type for the GethKeyStore type
type GethKeyStore struct {
	mock.Mock
}

// GetRoundRobinAddress provides a mock function with given fields: db, addresses
func (_m *GethKeyStore) GetRoundRobinAddress(db *gorm.DB, addresses ...common.Address) (common.Address, error) {
	_va := make([]interface{}, len(addresses))
	for _i := range addresses {
		_va[_i] = addresses[_i]
	}
	var _ca []interface{}
	_ca = append(_ca, db)
	_ca = append(_ca, _va...)
	ret := _m.Called(_ca...)

	var r0 common.Address
	if rf, ok := ret.Get(0).(func(*gorm.DB, ...common.Address) common.Address); ok {
		r0 = rf(db, addresses...)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(common.Address)
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(*gorm.DB, ...common.Address) error); ok {
		r1 = rf(db, addresses...)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}
